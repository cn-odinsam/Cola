// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace WebApi.Protos {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Greeter
  {
    static readonly string __ServiceName = "greet.Greeter";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::WebApi.Protos.HelloRequest> __Marshaller_greet_HelloRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::WebApi.Protos.HelloRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::WebApi.Protos.HelloReply> __Marshaller_greet_HelloReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::WebApi.Protos.HelloReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::WebApi.Protos.ServiceMethodParamts> __Marshaller_greet_ServiceMethodParamts = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::WebApi.Protos.ServiceMethodParamts.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::WebApi.Protos.ServiceMethodResponse> __Marshaller_greet_ServiceMethodResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::WebApi.Protos.ServiceMethodResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::WebApi.Protos.ClientStreamMethodParam> __Marshaller_greet_ClientStreamMethodParam = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::WebApi.Protos.ClientStreamMethodParam.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::WebApi.Protos.ClientStreamMethodResponse> __Marshaller_greet_ClientStreamMethodResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::WebApi.Protos.ClientStreamMethodResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::WebApi.Protos.ClientMethodParam> __Marshaller_greet_ClientMethodParam = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::WebApi.Protos.ClientMethodParam.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::WebApi.Protos.ServerStreamMethodResponse> __Marshaller_greet_ServerStreamMethodResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::WebApi.Protos.ServerStreamMethodResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::WebApi.Protos.HelloRequest, global::WebApi.Protos.HelloReply> __Method_SayHello = new grpc::Method<global::WebApi.Protos.HelloRequest, global::WebApi.Protos.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_greet_HelloRequest,
        __Marshaller_greet_HelloReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::WebApi.Protos.ServiceMethodParamts, global::WebApi.Protos.ServiceMethodResponse> __Method_ServiceMethod = new grpc::Method<global::WebApi.Protos.ServiceMethodParamts, global::WebApi.Protos.ServiceMethodResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ServiceMethod",
        __Marshaller_greet_ServiceMethodParamts,
        __Marshaller_greet_ServiceMethodResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::WebApi.Protos.ClientStreamMethodParam, global::WebApi.Protos.ClientStreamMethodResponse> __Method_ClientStreamMethodAsync = new grpc::Method<global::WebApi.Protos.ClientStreamMethodParam, global::WebApi.Protos.ClientStreamMethodResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "ClientStreamMethodAsync",
        __Marshaller_greet_ClientStreamMethodParam,
        __Marshaller_greet_ClientStreamMethodResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::WebApi.Protos.ClientMethodParam, global::WebApi.Protos.ServerStreamMethodResponse> __Method_ServerStreamMethodAsync = new grpc::Method<global::WebApi.Protos.ClientMethodParam, global::WebApi.Protos.ServerStreamMethodResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ServerStreamMethodAsync",
        __Marshaller_greet_ClientMethodParam,
        __Marshaller_greet_ServerStreamMethodResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::WebApi.Protos.ClientStreamMethodParam, global::WebApi.Protos.ServerStreamMethodResponse> __Method_ClientServerStreamMethodAsync = new grpc::Method<global::WebApi.Protos.ClientStreamMethodParam, global::WebApi.Protos.ServerStreamMethodResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "ClientServerStreamMethodAsync",
        __Marshaller_greet_ClientStreamMethodParam,
        __Marshaller_greet_ServerStreamMethodResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::WebApi.Protos.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Greeter</summary>
    [grpc::BindServiceMethod(typeof(Greeter), "BindService")]
    public abstract partial class GreeterBase
    {
      /// <summary>
      /// Sends a greeting  一元调用
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::WebApi.Protos.HelloReply> SayHello(global::WebApi.Protos.HelloRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 复杂 一元调用
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::WebApi.Protos.ServiceMethodResponse> ServiceMethod(global::WebApi.Protos.ServiceMethodParamts request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 客户端流式调用
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::WebApi.Protos.ClientStreamMethodResponse> ClientStreamMethodAsync(grpc::IAsyncStreamReader<global::WebApi.Protos.ClientStreamMethodParam> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 服务端流式调用
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ServerStreamMethodAsync(global::WebApi.Protos.ClientMethodParam request, grpc::IServerStreamWriter<global::WebApi.Protos.ServerStreamMethodResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 双向流调用
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ClientServerStreamMethodAsync(grpc::IAsyncStreamReader<global::WebApi.Protos.ClientStreamMethodParam> requestStream, grpc::IServerStreamWriter<global::WebApi.Protos.ServerStreamMethodResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GreeterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SayHello, serviceImpl.SayHello)
          .AddMethod(__Method_ServiceMethod, serviceImpl.ServiceMethod)
          .AddMethod(__Method_ClientStreamMethodAsync, serviceImpl.ClientStreamMethodAsync)
          .AddMethod(__Method_ServerStreamMethodAsync, serviceImpl.ServerStreamMethodAsync)
          .AddMethod(__Method_ClientServerStreamMethodAsync, serviceImpl.ClientServerStreamMethodAsync).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GreeterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SayHello, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::WebApi.Protos.HelloRequest, global::WebApi.Protos.HelloReply>(serviceImpl.SayHello));
      serviceBinder.AddMethod(__Method_ServiceMethod, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::WebApi.Protos.ServiceMethodParamts, global::WebApi.Protos.ServiceMethodResponse>(serviceImpl.ServiceMethod));
      serviceBinder.AddMethod(__Method_ClientStreamMethodAsync, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::WebApi.Protos.ClientStreamMethodParam, global::WebApi.Protos.ClientStreamMethodResponse>(serviceImpl.ClientStreamMethodAsync));
      serviceBinder.AddMethod(__Method_ServerStreamMethodAsync, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::WebApi.Protos.ClientMethodParam, global::WebApi.Protos.ServerStreamMethodResponse>(serviceImpl.ServerStreamMethodAsync));
      serviceBinder.AddMethod(__Method_ClientServerStreamMethodAsync, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::WebApi.Protos.ClientStreamMethodParam, global::WebApi.Protos.ServerStreamMethodResponse>(serviceImpl.ClientServerStreamMethodAsync));
    }

  }
}
#endregion
